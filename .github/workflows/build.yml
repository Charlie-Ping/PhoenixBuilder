name: Build binaries

on:
  push:
    branches: [ main ]
    paths:
      - "upload-to-server"

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Set up NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r20b
        add-to-path: false
    - name: Move NDK
      run: mv ${{ steps.setup-ndk.outputs.ndk-path }} ${HOME}/android-ndk-r20b
    - name: Install mingw compiler
      run: sudo apt install gcc-mingw-w64-i686 gcc -y
    - name: Setup theos's dependencies
      run: sudo apt install fakeroot git perl unzip build-essential libtinfo5
    - name: Clone theos
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        repository: 'theos/theos'
        path: 'theos'
    - name: Setup theos
      run: |
        mv $GITHUB_WORKSPACE/theos ~/theos
        export THEOS=~/theos
        echo "export THEOS=~/theos" >> ~/.profile
        curl -LO https://github.com/sbingner/llvm-project/releases/latest/download/linux-ios-arm64e-clang-toolchain.tar.lzma
        TMP=$(mktemp -d)
        tar -xf linux-ios-arm64e-clang-toolchain.tar.lzma -C $TMP
        mkdir -p $THEOS/toolchain/linux/iphone
        mv $TMP/ios-arm64e-clang-toolchain/* $THEOS/toolchain/linux/iphone/
        rm -r linux-ios-arm64e-clang-toolchain.tar.lzma $TMP
        curl -LO https://github.com/theos/sdks/archive/master.zip
        TMP=$(mktemp -d)
        unzip master.zip -d $TMP
        mv $TMP/sdks-master/*.sdk $THEOS/sdks
        rm -r master.zip $TMP
    - name: Pre-Build & configure go-raknet
      run: |
        make current
        make clean
        chmod 777 ~/go/pkg/mod/github.com/sandertv/go-raknet@v1.7.6/conn.go
        sed "s/urrentProtocol byte = 10/urrentProtocol byte = 8/g" ~/go/pkg/mod/github.com/sandertv/go-raknet@v1.7.6/conn.go>~/conn.go
        cp -f ~/conn.go ~/go/pkg/mod/github.com/sandertv/go-raknet@v1.7.6/conn.go
    - name: Build
      run: |
        export THEOS=~/theos
        make
    - name: Package for specific platforms
      run: |
        export THEOS=~/theos
        make package
    - name: Pack binaries
      run: |
        #mv build/hashes.json build/hashes-2.json
        mv release/*.deb build/
        tar -czf fb-linux-binaries.tar.gz build/*
    - name: Load Key
      env:
        FBKEY: ${{ secrets.FBKEY }}
      run: |
        echo "$FBKEY">~/fbkey
        mkdir -p ~/.ssh
        printf "StrictHostKeyChecking no\nUserKnownHostsFile /dev/null">~/.ssh/config
        chmod 0600 ~/fbkey
    - name: Upload binaries
      run: |
        echo "put fb-linux-binaries.tar.gz">~/a
        sftp -i ~/fbkey -b ~/a root@fastbuilder.pro
        ssh -i ~/fbkey root@fastbuilder.pro "mkdir -p fbbinaries;mv fb-linux-binaries.tar.gz fbbinaries/;cd fbbinaries;tar -xzf *.tar.gz;rm *.tar.gz;mv build/* ./;rm -rf build"




